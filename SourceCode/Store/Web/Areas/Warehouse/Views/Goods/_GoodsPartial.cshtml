@using System.Globalization
@model Model.GoodsModel

<div class="modal fade" id="inputModel" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            @using (Ajax.BeginForm("save", "goods",
                            new { @area = "warehouse" },
                            new AjaxOptions { HttpMethod = "post" },
                            new { @class = "form", @id = "inputForm", }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.Insert)
                @Html.HiddenFor(m => m.ID)
                <div class="modal-header">
                    <h4 class="modal-title">Thông tin hàng hóa</h4>
                </div>
                <div class="modal-body">
                    <div class="container-fluid">
                        <div class="row">
                            <div class="col-md-5 col-sm-5 col-xs-12">
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <label>Mẫ hàng hóa<span class="color-red"> *</span></label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                                        @Html.TextBoxFor(m => m.Code, new { @maxlength = "20", @class = "form-control", @required = true, @readonly = true, @autocomplete = "off" })
                                        @Html.ValidationMessageFor(m => m.Code)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <label>Tên hàng hóa<span class="color-red"> *</span></label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                                        @Html.TextBoxFor(m => m.Name, new { @maxlength = "50", @class = "form-control", @required = true, @autocomplete = "off", @autofocus = true })
                                        @Html.ValidationMessageFor(m => m.Name)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <label>Giá vốn</label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                                        @Html.TextBoxFor(m => m.OrgPrice, "{0:#,###}", new { @class = "form-control priceValue", @maxlength = 12 })
                                        @Html.ValidationMessageFor(m => m.OrgPrice)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <label>Giá bán</label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                                        @Html.TextBoxFor(m => m.Price, "{0:#,###}", new { @class = "form-control priceValue", @maxlength = 12 })
                                        @Html.ValidationMessageFor(m => m.Price)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <label>Nhóm hàng hóa</label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                                        @Html.DropDownListFor(m => m.GroupID, (IEnumerable<SelectListItem>)ViewBag.group,
                                                                       new { @class = "form-control selectpicker" })
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <label>Đơn vị tính</label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                                        @Html.DropDownListFor(m => m.UnitID, (IEnumerable<SelectListItem>)ViewBag.unit,
                                                                       new { @class = "form-control selectpicker" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5 col-sm-5 col-xs-12">
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <label>Cho phép bán trực tiếp</label>
                                        @Html.CheckBoxFor(m => m.AllowSaleDirect)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <label>Trọng lượng</label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                                        @Html.TextBoxFor(m => m.Weight, new { @maxlength = 11, @class = "form-control numberValue" })
                                        @Html.ValidationMessageFor(m => m.Weight)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <label>Tồn kho</label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                                        @Html.TextBoxFor(m => m.NumInStock, new { @maxlength = 11, @class = "form-control numberValue" })
                                        @Html.ValidationMessageFor(m => m.NumInStock)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <label>Tồn kho tối thiểu</label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                                        @Html.TextBoxFor(m => m.MinInStock, new { @maxlength = 11, @class = "form-control numberValue" })
                                        @Html.ValidationMessageFor(m => m.MinInStock)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <label>Tồn kho tối đa</label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                                        @Html.TextBoxFor(m => m.MaxInStock, new { @maxlength = 11, @class = "form-control numberValue" })
                                        @Html.ValidationMessageFor(m => m.MaxInStock)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <label>Ghi chú trong đơn hàng</label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                                        @Html.TextAreaFor(m => m.NoteInOrder, new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <img id="thumbnail" src="@Model.Avatar" style="width: 100%;" />
                                        @Html.HiddenFor(m => m.Avatar)
                                        @Html.HiddenFor(m => m.ImageFileName)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <label class="custom-file-upload">
                                            <input type="file" accept="image/png, image/jpeg" />
                                            Chọn ảnh
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                <label>Mô tả</label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <a href="javascript:;" onclick="clearInputModal()" class="btn btn-default">Đóng</a>
                    <button class="btn btn-primary primary-button">Lưu</button>
                </div>
            }
        </div>
    </div>
</div>
<script src="~/Content/jquery.priceformat.min.js"></script>
<script type="text/javascript" language=javascript>
    $.validator.unobtrusive.parse(document);
</script>
<script>
    $(document).ready(function () {
        scrollBodyModal('#Name');

        $('.priceValue').priceFormat({
            prefix: '',
            limit: 11,
            centsLimit: 0
        });
        $('.numberValue').priceFormat({
            prefix: '',
            limit: 11,
            centsLimit: 1
        });

        $('#inputModel').modal('show');
        //
        $('.selectpicker').selectpicker();
        //
        $('#inputForm').submit(function () {
            if ($(this).valid()) {
                $('#loadingModel').modal('show');
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: $(this).serialize(),
                    success: function (result) {
                        if (result.status == 1) {
                            notification(result.message, '@Resources.Notification.TypeSuccess');
                            table.ajax.reload();
                            $('#inputModel').modal('hide');
                        } else {
                            notification(result.message, '@Resources.Notification.TypeError');
                        }
                        $('#loadingModel').modal('hide');
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        if (xhr.status == 401 || xhr.status == 530) {
                            window.location.href = '/home/login';
                        }
                    }
                });
            }
            return false;
        });

        $('input[type=file]').change(function () {
            console.log(this.files[0]);
            getBase64(this.files[0], '#thumbnail', '#ImageFileName', '#Avatar');
        });

        function getBase64(file, img, fileName, filebase64) {
            $(fileName).val(file.name);
            var reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = function () {
                var image = new Image();
                image.src = reader.result;
                image.width = 100;
                //$(img).html(image);
                $(img).attr('src', reader.result);
                $(filebase64).val(reader.result);
            };
            reader.onerror = function (error) {
                console.log('Can not render file: ', error);
            };
        }
    });
</script>